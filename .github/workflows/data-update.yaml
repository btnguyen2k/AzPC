name: 'Update Azure locations and product categories'

on:
  workflow_dispatch:

  schedule:
    # run every Saturday (UTC)
    - cron: '1 2 * * 6'

env:
  BRANCH_NAME: dev
  TAG_PREFIX: v
  DOCKER_IMAGE: btnguyen2k/azpc

jobs:
  update-azure-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
    outputs:
      RESULT: ${{ steps.release_dry_run.outputs.result }}
      VERSION: ${{ steps.release_dry_run.outputs.releaseVersion }}
      RELEASE_NOTES: ${{ steps.release_dry_run.outputs.releaseNotes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
      - name: Update Azure locations and product categories
        run: |
          pwd=$(pwd)

          echo "Updating Azure locations..."
          cd AzPC.Blazor/AzPC.Blazor/config/
          curl https://btnguyen2k.github.io/azure-regions/locations.json -o azure-locations.json
          echo "Updating Azure product categories..."
          curl https://btnguyen2k.github.io/azure-regions/products.json -o azure-products.json
          echo $(date) > touch.txt

          echo "Updating change log..."
          cd ${pwd}
          echo "[patch] Update Azure locations and product categories" >> ./.semrelease/this_release

          echo "Committing changes..."
          git config --global user.email "<>"
          git config --global user.name "CI Build"
          git add .
          git commit -m "Update Azure locations and product categories"
          git push origin dev
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Release (dry-run)
        # see https://github.com/btnguyen2k/action-semrelease for documentation
        id: release_dry_run
        uses: btnguyen2k/action-semrelease@v4
        with:
          dry-run: true
          auto-mode: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-major-release: false
          tag-minor-release: false
          branches: ${{ env.BRANCH_NAME }}
          tag-prefix: ${{ env.TAG_PREFIX }}
          tag-only: true
      - name: Dummy
        run: |
          echo "Release dry-run result: ${{ steps.release_dry_run.outputs.result }}"
          echo "Release dry-run version: ${{ steps.release_dry_run.outputs.releaseVersion }}"

  # BuildAndTest:
  #   runs-on: ubuntu-latest
  #   needs: update-azure-data
  #   strategy:
  #     matrix:
  #       dotnet: [ '8.x', '9.x' ]
  #   name: Build and test with dotnet ${{ matrix.dotnet }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${ env.BRANCH_NAME }
  #     - name: Setup dotnet ${{ matrix.dotnet }}
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: ${{ matrix.dotnet }}
  #     - name: Display dotnet version
  #       run: dotnet --version
  #     - name: Install dependencies
  #       run: dotnet restore
  #     - name: Build
  #       run: dotnet build --no-restore
  #     - name: Test
  #       run: dotnet test --no-restore

  # ReleaseDryRun:
  #   needs: BuildAndTest
  #   runs-on: ubuntu-latest
  #   outputs:
  #     RESULT: ${{ steps.release_dry_run.outputs.result }}
  #     VERSION: ${{ steps.release_dry_run.outputs.releaseVersion }}
  #     RELEASE_NOTES: ${{ steps.release_dry_run.outputs.releaseNotes }}
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${ env.BRANCH_NAME }
  #     - name: Install Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 'lts/*'
  #     - name: Release (dry-run)
  #       # see https://github.com/btnguyen2k/action-semrelease for documentation
  #       id: release_dry_run
  #       uses: btnguyen2k/action-semrelease@v4
  #       with:
  #         dry-run: true
  #         auto-mode: true
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         tag-major-release: false
  #         tag-minor-release: false
  #         branches: ${{ github.ref_name }}
  #         tag-prefix: ${{ env.TAG_PREFIX }}
  #         tag-only: true

  # TestDockerfileLinux:
  #   needs: BuildAndTest
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       platforms: [ 'linux/amd64', 'linux/arm64' ]
  #   name: Test building Docker image(s) for Linux
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${ env.BRANCH_NAME }
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Build Docker image for ${{ matrix.platforms }}
  #       uses: docker/build-push-action@v6
  #       with:
  #         platforms: ${{ matrix.platforms }}
  #         push: false
  #         tags: test
  #         file: ./Dockerfile
  #         context: ./
