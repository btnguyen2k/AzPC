@using AzPC.Blazor.App.Layout
@using AzPC.Blazor.App.Shared
@using AzPC.Shared.Identity
@using System.Text.Json
@using Microsoft.AspNetCore.Components.WebAssembly

@attribute [Route(UIGlobals.ROUTE_AZURE_PRICING)]
@inherits BaseComponent

<SectionContent SectionId="MainLayout.Breadcrumb">
    <li class="breadcrumb-item">
        <a href="@UIGlobals.ROUTE_HOME">Home</a>
    </li>
    <li class="breadcrumb-item active">
        <span>@PAGE_TITLE</span>
    </li>
</SectionContent>

<AuthorizeView>
    <Authorizing>
        <AuthorizingView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Authorizing...")" />
    </Authorizing>
    <NotAuthorized>
        <NotAuthorizedView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Not Authorized")" LoginUrl="@LoginUrl" />
    </NotAuthorized>
    <Authorized>
		<PageTitle>@PAGE_TITLE | @AppInfo?.Name v@(AppInfo?.Version)</PageTitle>
        <div class="container-lg px-4">
            <div class="card border-top-3 mb-4">
                <div class="card-header">
                    <h4 class="card-title">@PAGE_TITLE</h4>
                </div>
                <div class="card-body">
					@if (!string.IsNullOrEmpty(AlertMessage))
					{
						<CAlert type="@AlertType">
							@AlertMessage
						</CAlert>
					}
					@if (!HideUI)
					{
						<div class="row">
							<div class="col">
								<select class="form-select form-select-sm" @onchange="@OnServiceFamilyChanged">
									<option value="" selected="@SelectedServiceFamily.Equals(string.Empty))">-= Service Family =-</option>
									@if (ServiceFamilyList != null)
									{
										@foreach (var item in ServiceFamilyList)
										{
											<option value="@item.Name" selected="@item.Name.Equals(@SelectedServiceFamily)">@item.Name</option>
										}
									}
								</select>
							</div>
							<div class="col">
								<select class="form-select" id="ms1" multiple data-coreui-search="global">
									<option value="0">Angular</option>
									<option value="1">Bootstrap</option>
									<option value="2">React.js</option>
									<option value="3">Vue.js</option>
									<optgroup label="backend">
										<option value="4">Django</option>
										<option value="5">Laravel</option>
										<option value="6">Node.js</option>
									</optgroup>
								</select>
								@*
								<select class="form-select form-select-sm" @onchange="@OnServiceChanged">
									<option value="" selected="@SelectedService.Equals(string.Empty)">-= Service =-</option>
									@if (ServiceList != null)
									{
										@foreach (var item in ServiceList)
										{
											<option value="@item.Id" selected="@item.Id.Equals(@SelectedService)">@item.Name</option>
										}
									}
								</select>
								*@
							</div>
						</div>
						<div class="row mt-2">
							<div class="col">
								@if (ProductList == null || ProductList.Count() == 0)
								{
									<CAlert type="info">
										No data, please select a service family/service to view the SKUs.
									</CAlert>
								}
								else
								{
									<table class="table table-sm table-bordered border-primary table-striped table-hover">
										<thead>
											<tr>
												<th scope="col" class="text-center">Product Id</th>
												<th scope="col" class="text-center">Product Name</th>
												<th scope="col" class="text-center">SKU Name</th>
											</tr>
										</thead>
										<tbody class="small">
											@foreach (var item in ProductList??[])
											{
												<tr>
													<td>@item.Id</td>
													<td>@item.Name</td>
													<td>@item.SkuName</td>
												</tr>
											}
										</tbody>
									</table>
								}
							</div>
						</div>
					}
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private const string PAGE_TITLE = "Pricing";
}
