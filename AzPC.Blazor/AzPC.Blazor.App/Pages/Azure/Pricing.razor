@using AzPC.Blazor.App.Layout
@using AzPC.Blazor.App.Shared
@using AzPC.Shared.Identity
@using System.Text.Json
@using Microsoft.AspNetCore.Components.WebAssembly

@attribute [Route(UIGlobals.ROUTE_AZURE_PRICING)]
@inherits BaseComponent

<SectionContent SectionId="MainLayout.Breadcrumb">
    <li class="breadcrumb-item">
        <a href="@UIGlobals.ROUTE_HOME">Home</a>
    </li>
    <li class="breadcrumb-item active">
        <span>@PAGE_TITLE</span>
    </li>
</SectionContent>

<AuthorizeView>
    <Authorizing>
        <AuthorizingView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Authorizing...")" />
    </Authorizing>
    <NotAuthorized>
        <NotAuthorizedView PageTitle="@($"{PAGE_TITLE} | {AppInfo?.Name} v{AppInfo?.Version} - Not Authorized")" LoginUrl="@LoginUrl" />
    </NotAuthorized>
    <Authorized>
		<PageTitle>@PAGE_TITLE | @AppInfo?.Name v@(AppInfo?.Version)</PageTitle>
        <div class="container-lg px-4">
            <div class="card border-top-3 mb-4">
                <div class="card-header">
                    <h4 class="card-title">
						@PAGE_TITLE
					</h4>
                </div>
                <div class="card-body">
					@if (!string.IsNullOrEmpty(AlertMessage))
					{
						<CAlert type="@AlertType">
							@AlertMessage
						</CAlert>
					}
					@if (!HideUI)
					{
						<div class="row">
							<div class="col-sm-12 col-md-6 mb-2">
								<select class="form-select form-select-sm mb-2" @onchange="@OnServiceFamilyChanged">
									<option value="" selected="@SelectedServiceFamily.Equals(string.Empty))">-= Service Family =-</option>
									@if (ServiceFamilyList != null)
									{
										@foreach (var item in ServiceFamilyList)
										{
											<option value="@item.Name" selected="@item.Name.Equals(@SelectedServiceFamily)">@item.Name</option>
										}
									}
								</select>
								<select class="form-select form-select-sm mb-2" @onchange="@OnServiceChanged">
									<option value="" selected="@SelectedService.Equals(string.Empty)">-=(select a family for available services)=-</option>
									@if (ServiceList != null)
									{
										@foreach (var item in ServiceList)
										{
											<option value="@item.Id" selected="@item.Id.Equals(@SelectedService)">@item.Name</option>
										}
									}
								</select>
								<select class="form-select form-select-sm mb-2" @onchange="@OnProductChanged">
									<option value="" selected="@SelectedProduct.Equals(string.Empty)">-=(select a service for available products)=-</option>
									@if (ProductList != null)
									{
										@foreach (var item in ProductList)
										{
											<option value="@item.Id" selected="@item.Id.Equals(@SelectedProduct)">@item.Id - @item.Name</option>
										}
									}
								</select>
								<div class="d-grid">
									<button class="btn btn-primary btn-sm" disabled="@BtnGetPricingDisabled" @onclick="()=>BtnGetPricingClicked()">
										Get pricing for selected product &amp; region(s)
									</button>
								</div>
							</div>
							<div class="col-sm-12 col-md-6 mb-2">
								<select class="form-select h-100" multiple @onchange="@OnRegionChanged">
									@if (RegionGroups != null)
									{
										@foreach (var item in RegionGroups)
										{
											<optgroup label="@item.Name">
												@if (item.Regions != null)
												{
													@foreach (var region in item.Regions)
													{
														<option value="@region.Name" selected="@SelectedRegions.Contains(region.Name)">@region.Name</option>
													}
												}
											</optgroup>
										}
									}
								</select>
							</div>
						</div>
						<div class="row mt-2">
							<div class="col">
								<div class="table-responsive">
									@if (PricingList == null || PricingList.Count() == 0)
									{
										<CAlert type="info">
											No data, please select a product and region(s) to view pricing.
										</CAlert>
									}
									else
									{
										<table class="table table-sm table-bordered border-primary table-striped table-hover" id="tblPricing">
											<thead>
												<tr>
													<th scope="col" class="text-center text-nowrap">Product</th>
													<th scope="col" class="text-center text-nowrap">SKU Name</th>
													<th scope="col" class="text-center text-nowrap">Meter Name</th>
													@foreach (var region in PricingRegions)
													{
														<th scope="col" class="text-center text-nowrap">@region</th>
													}
												</tr>
											</thead>
											<tbody class="small">
												@foreach (var item in PricingList)
												{
													<tr>
														<td class="text-nowrap">@item.ProductName</td>
														<td class="text-nowrap">@item.SkuName</td>
														<td class="text-nowrap">@item.MeterName</td>
														@foreach (var region in PricingRegions)
														{
															if (item.PricingPerRegion.TryGetValue(region, out var pricing))
															{
																<td class="text-end text-nowrap">$@pricing.RetailPrice</td>
															}
															else
															{
																<td class="text-end">-</td>
															}
														}
													</tr>
												}
											</tbody>
										</table>
									}
								</div>
							</div>
						</div>
					}
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

<!-- Plugins and scripts required by this page-->
<script src="@UIGlobals.ASSET_ROOT/utils.js"></script>

@code {
    private const string PAGE_TITLE = "Pricing";
}
