@using AzPC.Blazor.App.Layout
@using AzPC.Blazor.App.Shared
@using System.Reflection

@attribute [Route(UIGlobals.ROUTE_HOME)]
@inherits BaseComponent

<HeadContent>
    <!-- Plugins and styles required by this page-->
    <!--<link href="@UIGlobals.COREUI_BASE/vendors/@@coreui/chartjs/css/coreui-chartjs.css" rel="stylesheet">-->
</HeadContent>

<PageTitle>Home | @AppInfo?.Name</PageTitle>

<SectionContent SectionId="MainLayout.Breadcrumb">
    <li class="breadcrumb-item">
        <a href="@UIGlobals.ROUTE_HOME">Home</a>
    </li>
    <li class="breadcrumb-item active">
        <span>Dashboard</span>
    </li>
</SectionContent>

<div class="container-lg px-4">
    <div class="card mb-4">
        <div class="card-header">
            <h4 class="card-title">@AppInfo?.Name - @AppInfo?.Description</h4>
        </div>
        <div class="card-body">
            <h5>Main Features:</h5>
            <ul>
                <li>
                    Discover Azure regions and their locations.
				</li>
				<li>
					Browse Azure services and product offerings.
				</li>
				<li>
					View and compare Azure pricing for products and services across regions.
                </li>
            </ul>
			<h5>What's new <span class="badge badge-sm bg-danger ms-auto">NEW</span>:</h5>
			<ul>
				<li>
					View locations of Azure regions on Google Maps.
				</li>
				<li>
					Export table data to Excel.
				</li>
			</ul>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <h5>FAQs:</h5>
			<h6>Does it seems that not all Azure regions Azure displayed?</h6>
            <p class="card-text">
                Only physical Azure regions are displayed, meaning logical regions are excluded. Additionally, an Azure account may not have access to all Azure regions.
				The Azure region list is derived from a Visual Studio subscription account, which does not include access to regions such as China or US Gov.
			</p>
        </div>
    </div>
</div>

<!-- Plugins and scripts required by this page-->
<!--
<script src="@UIGlobals.COREUI_BASE/vendors/chart.js/js/chart.umd.js"></script>
<script src="@UIGlobals.COREUI_BASE/vendors/@@coreui/chartjs/js/coreui-chartjs.js"></script>
-->
<!--<script src="@UIGlobals.COREUI_BASE/js/colors.js"></script>-->
<!--<script src="@UIGlobals.COREUI_BASE/js/main.js"></script>-->

@code {
	private string releaseInfo { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync() {
		await base.OnInitializedAsync();
		// TODO: Load release info from a file or API
	}
}
