# syntax=docker/dockerfile:1

ARG DOTNETVERSION=8.0
ARG BASEIMAGE=nanoserver-ltsc2022

# Version of the Windows image must match the host OS version (e.g. both must be 2022).
FROM mcr.microsoft.com/dotnet/sdk:$DOTNETVERSION-$BASEIMAGE AS build

COPY . /source
WORKDIR /source

ARG TARGETARCH
ARG BUILDPLATFORM
ARG TARGETPLATFORM

# Build the application.
RUN echo Running on %BUILDPLATFORM%, building for %TARGETPLATFORM% (%TARGETARCH%)
RUN dotnet restore
RUN dotnet publish --no-restore --configuration Debug --property:PublishDir=/app /p:EnvironmentName=Development

################################################################################

FROM mcr.microsoft.com/dotnet/aspnet:$DOTNETVERSION-$BASEIMAGE AS final
WORKDIR /app

# ATTENTION: Change this to match the name of your application.
ARG BASENAME="AzPC"

COPY --from=build /app ./
COPY ${BASENAME}.Blazor/${BASENAME}.Blazor/config ./config
COPY ${BASENAME}.Blazor/${BASENAME}.Blazor/data ./data

# Create a non-privileged user that the app will run under.
# See https://docs.docker.com/go/dockerfile-user-best-practices/
USER appuser

# Enable Swagger UI
ENV ENABLE_SWAGGER_UI=true

# Initialize the database
ENV INIT_DB=true

# API base URL setting for Blazor Server mode
ENV API__BaseUrl=http://localhost:8080

# Set database type to InMemory for demo purposes
ENV Databases__Application__Type=InMemory
ENV Databases__Identity__Type=InMemory

# Set the ASP.NET Core environment to Development
ENV ASPNETCORE_ENVIRONMENT=Development

# # Default port for dotnet application
EXPOSE 8080

# ATTENTION: Change this to match the name of your application.
ENTRYPOINT ["dotnet", "AzPC.Blazor.dll"]
