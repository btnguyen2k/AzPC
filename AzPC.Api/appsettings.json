{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",

  // Application metadata
  "App": {
    "Name": "BAT",
    "Version": "0.0.0",
    "Description": "Blazor Admin Template"
  },

  // Cryptography keys
  "Keys": {
    // Path to the PFX file and password to open it. The PFX file must contain a RSA private key.
    "RSAPFXFile": "./config/cert.pfx",
    "RSAPFXPassword": "Secret1",

    // Or, path to the RSA private key file. The file must be in PEM format.
    // Note: if both RSAPFXFile and RSAPrivKeyFile are provided, RSAPFXFile will take precedence.
    "RSAPrivKeyFile": "./config/keypair.pem",
    "RSAPrivKeyPassword": "Secret1"
  },

  // JWT settings
  "Jwt": {
    "Issuer": "blazor-admin-template",
    "Audience": "http://localhost:8080",
    "Expiration": 7200 // default expiration time in seconds
    //"Key": "S3cretK3yP@dd1ngzJh^H/9V+q),c'8I", // (min size = 32 bytes) if not empty the JWT will be signed with this key using HMACSHA256; otherwise, it will be signed with the RSA private key using RSASHA256
  },

  // Supported cache types:
  // - Memory: in-memory cache, good for development and testing; or for usecases where application is running on a single instance and memory usage is not a concern.
  // - Redis: distributed cache, good for production use; sample connection string format: "localhost:6379,abortConnect=false"
  // - None, or any unsupported value: no caching
  "Caches": {
    // Cache configuration keys:
    // - Type: cache type, possible values: "Memory", "Redis", "None" (default)
    // - KeyPrefix: cache key prefix, for Redis only (default "")
    // - SizeLimit: cache size limit, in bytes, for in-memory cache only (default ~ 100mb)
    // - ExpirationAfterWrite: cache entries expire after specified period, in seconds. Set to 0 (default) to disable expiration.
    // - ExpirationAfterAccess: cache entries expire after specified period of no access, in seconds. Set to 0 (default) to disable expiration.
    // - CompressionLevel: control whether cache entries should be compressed or not, possible values: "NoCompression" (default), "Optimal", "Fastest" and "SmallestSize"
    // - ConnectionString: points to the connection string in ConnectionStrings section, for Redis only

    "Application": {
      "Type": "Memory",
      "KeyPrefix": "App-", // cache key prefix, for Redis only
      "SizeLimit": 100000000, // in bytes, ~100mb, for in-memory cache only
      //"ExpirationAfterWrite": 3600, // cache entries expire after specified period, in seconds. Set to 0 to disable expiration.
      "ExpirationAfterAccess": 3600, // cache entries expire after specified period of no access, in seconds. Set to 0 to disable expiration.
      "CompressionLevel": "NoCompression", // possible values: "NoCompression", "Optimal", "Fastest" and "SmallestSize"
      "ConnectionString": "ApplicationRedis" // points to the connection string in ConnectionStrings section, for Redis only
    },

    "Identity": {
      "Type": "Memory",
      "KeyPrefix": "Id-",
      "SizeLimit": 100000000,
      "ExpirationAfterWrite": 3600,
      "CompressionLevel": "NoCompression",
      "ConnectionString": "IdentityRedis"
    }
  },

  // Supported database types:
  // - InMemory (or Memory): in-memory database, not for production use! No connection string required.
  // - SQLite: not for production use! Connection string format: "Data Source=<directory>/<database>.db"
  // - SQLServer: sample of LocalDb connection string: "Server=(localdb)\\mssqllocaldb;Database=RazorPagesPizza;Trusted_Connection=True;MultipleActiveResultSets=true"
  "Databases": {
    // Database configuration keys:
    // - Type: database type, possible values: "InMemory" (or "Memory"), "SQLite", "SQLServer"
    // - ConnectionString: points to the connection string in ConnectionStrings section
    // - UseDbContextPool: if true, use DbContext pooling
    // - PoolSize: maximum number of DbContext instances in the pool (if UseDbContextPool is true)

    "Application": {
      "Type": "SQLServer",
      "ConnectionString": "ApplicationSQLServer", // points to the connection string in ConnectionStrings section
      "UseDbContextPool": true, // use DbContext pooling"
      "PoolSize": 128 // maximum number of DbContext instances in the pool
    },

    "Identity": {
      "Type": "SQLServer",
      "ConnectionString": "IdentitySQLServer" // points to the connection string in ConnectionStrings section
    }
  },

  "ConnectionStrings": {
    "IdentitySQLite": "Data Source=./data/sqlite/identity.db",
    //"IdentitySQLServer": "Server=(localdb)\\mssqllocaldb;Database=AzPCIdentity;Trusted_Connection=True;MultipleActiveResultSets=true",
    "IdentityRedis": "localhost:6379,abortConnect=false",

    "ApplicationSQLite": "Data Source=./data/sqlite/application.db",
    //"ApplicationSQLServer": "Server=(localdb)\\mssqllocaldb;Database=AzPCApplication;Trusted_Connection=True;MultipleActiveResultSets=true",
    "ApplicationRedis": "localhost:6379,abortConnect=false"
  },

  // Authentication settings
  "Authentication": {
    "Microsoft": {
      "TenantId": "your-tentant-id-or-common",
      "ClientId": "your-client-id",
      "ClientSecret": "your-client-secret"
    }
  },

  // Seeding data
  "SeedingData": {
    "Identity": {
      // Note: each claim is in following format "<claim_type>:<claim_value>", e.g: "#role:global-admin"
      // Note: assigned roles are identified by their NAMEs, not IDs
      "Roles": [
        {
          "Name": "Global Admin",
          "Description": "Global Administrator with full access to all features and settings.",
          "Claims": [ "#role:global-admin" ]
        },
        {
          "Name": "Account Admin",
          "Description": "Account Administrator with permissions to manage users and roles.",
          "Claims": [ "#role:user-manager", "#perm:create-user", "#perm:delete-user", "#perm:modify-user" ]
        },
        {
          "Name": "Application Admin",
          "Description": "Application Administrator with permissions to manage applications.",
          "Claims": [ "#role:application-manager", "#perm:create-application", "#perm:delete-application", "#perm:modify-application" ]
        }
      ],
      "Users": [
        {
          "UserName": "admin",
          "Email": "admin@localhost",
          "GivenName": "Administrator",
          "FamilyName": "Local",
          "Roles": [ "Global Admin" ],
          "Claims": []
        }
      ]
    }
  }
}
